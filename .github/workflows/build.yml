name: Build API Specification

on:
  schedule:
    - cron: '*/2 * * * *'
  workflow_dispatch:

jobs:
  build-api-spec:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository office-js-api-declarations
        uses: actions/checkout@v4
        with:
          path: office-js-api-declarations

      - name: Checkout repository with examples office-js-api
        uses: actions/checkout@v4
        with:
          path: office-js-api

      - name: Checkout build_tools repository
        uses: actions/checkout@v4
        with:
          repository: ONLYOFFICE/build_tools
          token: ${{ secrets.READ_PAT }}
          ref: release/v8.2.0
          path: build_tools

      - name: Checkout sdkjs repository
        uses: actions/checkout@v4
        with:
          repository: ONLYOFFICE/sdkjs
          token: ${{ secrets.READ_PAT }}
          ref: release/v8.2.0
          path: sdkjs

      - name: Checkout sdkjs-forms repository
        uses: actions/checkout@v4
        with:
          repository: ONLYOFFICE/sdkjs-forms
          token: ${{ secrets.READ_PAT }}
          ref: release/v8.2.0
          path: sdkjs-forms
      
      - name: Check release/hotfix branches
        run: |
          git -C build_tools fetch --all
          release_branches=$(git -C build_tools branch -r | grep -E '^ *origin/release/v.'); \
          echo "release=${release_branches:-}" >> $GITHUB_ENV
          hotfix_branches=$(git -C build_tools branch -r | grep -E '^ *origin/hotfix/v.'); \
          echo "hotfix=${hotfix_branches:-}" >> $GITHUB_ENV
      
      - name: Echo release
        run: echo $env.release
      
      - name: Echo hotfix
        run: echo $env.hotfix

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install Node.js dependencies
        run: |
          cd build_tools/scripts/sdkjs_common/jsdoc
          npm install

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run Python script to generate docs
        run: |
          cd build_tools/scripts/sdkjs_common/jsdoc
          python generate_docs_json.py
          python generate_docs_plugins_json.py

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request
        run: |
          #BRANCH_NAME="update-api-spec-${{ github.run_number }}"
          #cd office-js-api-declarations
          #git checkout -b $BRANCH_NAME
          #git add .
          #git commit -m "Add documentation update from GitHub Actions"
          #git push origin $BRANCH_NAME
          #gh pr create --title "Update documentation from GitHub Actions" --body "This PR includes updates to the documentation artifacts generated by the GitHub Actions workflow." --base ${{ github.ref_name }} --head $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.READ_PAT }}
